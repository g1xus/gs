let toggler=document.getElementById("toggler"),menu=document.querySelector(".nav-menu"),togglerLine=document.querySelector(".nav-toggler__line"),dots=document.querySelectorAll(".rates-interface__dot"),dot1=document.querySelectorAll(".rates-interface__dot")[0],dot2=document.querySelectorAll(".rates-interface__dot")[1],dot3=document.querySelectorAll(".rates-interface__dot")[2],dot4=document.querySelectorAll(".rates-interface__dot")[3],area1=document.querySelectorAll(".rates-data__info")[0],area2=document.querySelectorAll(".rates-data__info")[1],area3=document.querySelectorAll(".rates-data__info")[2],packets=document.querySelectorAll(".rates-interface__button"),packet1=document.querySelectorAll(".rates-interface__button")[0],packet2=document.querySelectorAll(".rates-interface__button")[1],packet3=document.querySelectorAll(".rates-interface__button")[2],areaNumber=0,averageNumber=0;function addDot(e){dots.forEach((function(t,a,r){a==e?t.classList.toggle("rates-interface__dot_active"):t.classList.remove("rates-interface__dot_active")}))}function activeBtn(e){packets.forEach((function(t,a,r){a==e?t.classList.toggle("rates-interface__button_active"):t.classList.remove("rates-interface__button_active")}))}packet1.addEventListener("click",(function(){activeBtn(0),averageNumber=100,area2.textContent=averageNumber+" р",0!=areaNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")})),packet2.addEventListener("click",(function(){activeBtn(1),averageNumber=300,area2.textContent=averageNumber+" р",0!=areaNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")})),packet3.addEventListener("click",(function(){activeBtn(2),averageNumber=600,area2.textContent=averageNumber+" р",0!=areaNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")})),dot1.addEventListener("click",(function(){addDot(0),areaNumber=100,area1.textContent="100 м²",0!=averageNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")})),dot2.addEventListener("click",(function(){addDot(1),areaNumber=1e4,area1.textContent="10000 м²",0!=averageNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")})),dot3.addEventListener("click",(function(){addDot(2),areaNumber=25e4,area1.textContent="250 000 м²",0!=averageNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")})),dot4.addEventListener("click",(function(){addDot(3),areaNumber=5e5,area1.textContent="500 000 м²",0!=averageNumber&&(area3.textContent=averageNumber*areaNumber*.5+" р")}));const triggers=document.querySelectorAll(".nav-menu__el"),highlight=document.createElement("span");function displayBlock(){highlight.style.display="block"}function highlightLink(){const e=this.getBoundingClientRect();console.log(e);const t=e.width,a=e.height,r=e.top+window.scrollY,n=e.left+window.scrollX;highlight.style.width=t+"px",highlight.style.height=a+"px",highlight.style.transform=`translate(${n}px, ${r}px)`}highlight.classList.add("highlight"),document.body.append(highlight),toggler.addEventListener("click",(function(){menu.classList.toggle("nav-menu_active"),togglerLine.classList.toggle("nav-toggler__line_active"),toggler.classList.toggle("nav-toggle_active"),toggler.classList.contains("nav-toggle_active")?(setTimeout(displayBlock,500),console.log("dsdsds"),triggers.forEach(e=>e.addEventListener("mouseenter",highlightLink)),triggers.forEach(e=>e.addEventListener("focus",highlightLink))):highlight.style.display="none"}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
